events { worker_connections 1024; }

http {

    log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name $host to: $upstream_addr: $request $status upstream_response_time $upstream_response_time msec $msec request_time $request_time';

    upstream ollama {
        server ollamagrid-node-01:11434;
    }

    upstream grid-phi35 {
        server ollamagrid-node-02:11434;
    }

    upstream grid-phi3 {
        server ollamagrid-node-01:11434;
    }

    upstream grid-llava-phi3 {
        server ollamagrid-node-03:11434;
    }

    server {

        listen 80;
        access_log /tmp/access.log upstreamlog;        

        location / {
            proxy_pass http://ollama;
        }

        location /teste {
            default_type text/html;
            set $target "http://ollama-phi35";
            content_by_lua_block {
                ngx.say("<p>hello, world</p>");
                ngx.say(ngx.var.target);
                ngx.var.target = "novo valor"
                ngx.say(ngx.var.target);
            }
        }

        location /api/chat {
            set $target "http://ollama";
            content_by_lua_block {
                ngx.log(0, "executando /api/chat")
                ngx.req.read_body() 
                ngx.req.get_body_file()
                local body = ngx.req.get_body_data()
                if body then ngx.log(0, "body: " .. body) else ngx.log(0, "empty body") end
                if body and body:find('"model": "phi3.5:latest"') then
                    ngx.log(0, "phi3.5:latest found in body")
                    ngx.var.target = "http://grid-phi35";
                elseif body and body:find('"model": "phi3:latest"') then
                    ngx.log(0, "phi3:latest found in body")
                    ngx.var.target = "http://grid-phi3";
                elseif body and body:find('"model": "llava-phi3:latest"') then
                    ngx.log(0, "llava-phi3:latest found in body")
                    ngx.var.target = "http://grid-llava-phi3";                    
                else
                    ngx.log(0, "no models found in body")
                    ngx.var.target = "http://ollama";
                end
                ngx.log(0, "target = " .. ngx.var.target)
                return ngx.exec("@dynamic_proxy")
            }
        }

        location @dynamic_proxy {
            proxy_pass $target;
        }

    }

}
